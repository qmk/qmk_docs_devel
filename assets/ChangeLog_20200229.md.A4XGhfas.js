import { _ as _export_sfc, c as createElementBlock, o as openBlock, a8 as createStaticVNode } from "./chunks/framework.Cauyuiy8.js";
const __pageData = JSON.parse('{"title":"QMK Breaking Change - 2020 Feb 29 Changelog","description":"","frontmatter":{},"headers":[],"relativePath":"ChangeLog/20200229.md","filePath":"ChangeLog/20200229.md","lastUpdated":1751656200000}');
const _sfc_main = { name: "ChangeLog/20200229.md" };
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="qmk-breaking-change-2020-feb-29-changelog" tabindex="-1">QMK Breaking Change - 2020 Feb 29 Changelog <a class="header-anchor" href="#qmk-breaking-change-2020-feb-29-changelog" aria-label="Permalink to &quot;QMK Breaking Change - 2020 Feb 29 Changelog&quot;">​</a></h1><p>Four times a year QMK runs a process for merging Breaking Changes. A Breaking Change is any change which modifies how QMK behaves in a way that is incompatible or potentially dangerous. We limit these changes to 4 times per year so that users can have confidence that updating their QMK tree will not break their keymaps.</p><h2 id="update-chibios-chibios-contrib-ugfx-submodules" tabindex="-1">Update ChibiOS/ChibiOS-Contrib/uGFX submodules <a class="header-anchor" href="#update-chibios-chibios-contrib-ugfx-submodules" aria-label="Permalink to &quot;Update ChibiOS/ChibiOS-Contrib/uGFX submodules&quot;">​</a></h2><ul><li>General Notes <ul><li>A <code>make git-submodule</code> may be required after pulling the latest QMK firmware code to update affected submodules to the upgraded revisions</li><li>Enabling link-time-optimization (<code>LINK_TIME_OPTIMIZATION_ENABLE = yes</code>) should work on a lot more boards</li></ul></li><li>Upgrade to ChibiOS ver19.1.3 <ul><li>This will allow QMK to update to upstream ChibiOS a lot easier -- the old version was ~2 years out of date. Automated update scripts have been made available to simplify future upgrades.</li><li>Includes improved MCU support and bugfixes</li><li>ChibiOS revision is now included in Command output</li><li>Timers should now be more accurate</li></ul></li><li>Upgrade to newer ChibiOS-Contrib <ul><li>Also includes improved MCU support and bugfixes</li><li>ChibiOS-Contrib revision is now included in Command output</li></ul></li><li>Upgrade to newer uGFX <ul><li>Required in order to support updated ChibiOS</li></ul></li></ul><h2 id="fix-chibios-timer-overflow-for-16-bit-systick-devices" tabindex="-1">Fix ChibiOS timer overflow for 16-bit SysTick devices <a class="header-anchor" href="#fix-chibios-timer-overflow-for-16-bit-systick-devices" aria-label="Permalink to &quot;Fix ChibiOS timer overflow for 16-bit SysTick devices&quot;">​</a></h2><ul><li>On 16-bit SysTick devices, the timer subsystem in QMK was incorrectly dealing with overflow. <ul><li>When running at a 100000 SysTick frequency (possible on 16-bit devices, but uncommon), this overflow would occur after 0.65 seconds.</li></ul></li><li>Timers are now correctly handling this overflow case and timing should now be correct on ChibiOS/ARM.</li></ul><h2 id="update-lufa-submodule" tabindex="-1">Update LUFA submodule <a class="header-anchor" href="#update-lufa-submodule" aria-label="Permalink to &quot;Update LUFA submodule&quot;">​</a></h2><ul><li>Updates the LUFA submodule to include updates from upstream (abcminiuser/lufa)</li><li>Includes some cleanup for QMK DFU generation</li></ul><h2 id="encoder-flip" tabindex="-1">Encoder flip <a class="header-anchor" href="#encoder-flip" aria-label="Permalink to &quot;Encoder flip&quot;">​</a></h2><ul><li>Flips the encoder direction so that <code>clockwise == true</code> is for actually turning the knob clockwise</li><li>Adds <code>ENCODER_DIRECTION_FLIP</code> define, so that reversing the expected dirction is simple for users.</li><li>Cleans up documentation page for encoders</li></ul><h2 id="adding-support-for-backlight-on-state-for-hardware-pwm-backlight" tabindex="-1">Adding support for <code>BACKLIGHT_ON_STATE</code> for hardware PWM backlight <a class="header-anchor" href="#adding-support-for-backlight-on-state-for-hardware-pwm-backlight" aria-label="Permalink to &quot;Adding support for `BACKLIGHT_ON_STATE` for hardware PWM backlight&quot;">​</a></h2><ul><li>Previously, the define only affected software PWM, and hardware PWM always assumed an N-channel MOSFET.</li><li>The hardware PWM backlight setup has been updated to respect this option.</li><li>The default &quot;on&quot; state has been changed to <code>1</code> - <strong>this impacts all keyboards using software PWM backlight that do not define it explicitly</strong>. If your keyboard&#39;s backlight is acting strange, it may have a P-channel MOSFET, and will need to have <code>#define BACKLIGHT_ON_STATE 0</code> added to the keyboard-level <code>config.h</code>. Please see the PR for more detailed information.</li></ul><h2 id="migrating-action-layer-tap-key-entries-in-fn-actions-to-lt-keycodes" tabindex="-1">Migrating <code>ACTION_LAYER_TAP_KEY()</code> entries in <code>fn_actions</code> to <code>LT()</code> keycodes <a class="header-anchor" href="#migrating-action-layer-tap-key-entries-in-fn-actions-to-lt-keycodes" aria-label="Permalink to &quot;Migrating `ACTION_LAYER_TAP_KEY()` entries in `fn_actions` to `LT()` keycodes&quot;">​</a></h2><ul><li><code>fn_actions</code> is deprecated, and its functionality has been superseded by direct keycodes and <code>process_record_user()</code></li><li>The end result of removing this obsolete feature should result in a decent reduction in firmware size and code complexity</li><li>All keymaps affected are recommended to switch away from <code>fn_actions</code> in favour of the <a href="./../custom_quantum_functions">custom keycode</a> and <a href="./../feature_macros">macro</a> features</li></ul><h2 id="moving-backlight-keycode-handling-to-process-keycode" tabindex="-1">Moving backlight keycode handling to <code>process_keycode/</code> <a class="header-anchor" href="#moving-backlight-keycode-handling-to-process-keycode" aria-label="Permalink to &quot;Moving backlight keycode handling to `process_keycode/`&quot;">​</a></h2><ul><li>This refactors the backlight keycode logic to be clearer and more modular.</li><li>All backlight-related keycodes are now actioned in a single file.</li><li>The <code>ACTION_BACKLIGHT_*</code> macros have also been deleted. If you are still using these in a <code>fn_actions[]</code> block, please switch to using the backlight keycodes or functions directly.</li></ul><h2 id="refactor-planck-keymaps-to-use-layout-macros" tabindex="-1">Refactor Planck keymaps to use Layout Macros <a class="header-anchor" href="#refactor-planck-keymaps-to-use-layout-macros" aria-label="Permalink to &quot;Refactor Planck keymaps to use Layout Macros&quot;">​</a></h2><ul><li>Refactor Planck keymaps to use layout macros instead of raw matrix assignments</li><li>Makes keymaps revision-agnostic</li><li>Should reduce noise and errors in Travis CI logs</li></ul><h2 id="gon-nerd-codebase-refactor" tabindex="-1">GON NerD codebase refactor <a class="header-anchor" href="#gon-nerd-codebase-refactor" aria-label="Permalink to &quot;GON NerD codebase refactor&quot;">​</a></h2><ul><li>Splits the codebase for GON NerD 60 and NerdD TKL PCBs into two separate directories.</li><li>If your keymap is for a NerD 60 PCB, your <code>make</code> command is now <code>make gon/nerd60:&lt;keymap&gt;</code>.</li><li>If your keymap is for a NerD TKL PCB, your <code>make</code> command is now <code>make gon/nerdtkl:&lt;keymap&gt;</code>.</li></ul>', 20);
const _hoisted_21 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", null, _hoisted_21);
}
const _20200229 = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  __pageData,
  _20200229 as default
};
