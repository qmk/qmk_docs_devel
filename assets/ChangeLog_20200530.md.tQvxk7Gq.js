import { _ as _export_sfc, c as createElementBlock, o as openBlock, a8 as createStaticVNode } from "./chunks/framework.Cauyuiy8.js";
const __pageData = JSON.parse('{"title":"QMK Breaking Change - 2020 May 30 Changelog","description":"","frontmatter":{},"headers":[],"relativePath":"ChangeLog/20200530.md","filePath":"ChangeLog/20200530.md","lastUpdated":1751656200000}');
const _sfc_main = { name: "ChangeLog/20200530.md" };
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="qmk-breaking-change-2020-may-30-changelog" tabindex="-1">QMK Breaking Change - 2020 May 30 Changelog <a class="header-anchor" href="#qmk-breaking-change-2020-may-30-changelog" aria-label="Permalink to &quot;QMK Breaking Change - 2020 May 30 Changelog&quot;">​</a></h1><p>Four times a year QMK runs a process for merging Breaking Changes. A Breaking Change is any change which modifies how QMK behaves in a way that is incompatible or potentially dangerous. We limit these changes to 4 times per year so that users can have confidence that updating their QMK tree will not break their keymaps.</p><p>The list of changes follows.</p><h2 id="core-changes" tabindex="-1">Core Changes <a class="header-anchor" href="#core-changes" aria-label="Permalink to &quot;Core Changes&quot;">​</a></h2><h3 id="converting-v-usb-usbdrv-to-a-submodule" tabindex="-1">Converting V-USB usbdrv to a submodule <a class="header-anchor" href="#converting-v-usb-usbdrv-to-a-submodule" aria-label="Permalink to &quot;Converting V-USB usbdrv to a submodule&quot;">​</a></h3><p><a href="https://github.com/qmk/qmk_firmware/pull/8321" target="_blank" rel="noreferrer">#8321</a> and <a href="https://github.com/qmk/qmk_compiler/pull/62" target="_blank" rel="noreferrer">qmk_compiler#62</a>.</p><p>These PRs move the V-USB driver code out of the qmk_firmware repository and into a submodule pointed at <a href="https://github.com/obdev/v-usb" target="_blank" rel="noreferrer">https://github.com/obdev/v-usb</a>. This will make it easier to update the codebase if needed, while applying any potential QMK-specific modifications by forking it to the QMK GitHub organization.</p><h3 id="unify-tap-hold-functions-and-documentation" tabindex="-1">Unify Tap Hold functions and documentation <a class="header-anchor" href="#unify-tap-hold-functions-and-documentation" aria-label="Permalink to &quot;Unify Tap Hold functions and documentation&quot;">​</a></h3><p><a href="https://github.com/qmk/qmk_firmware/pull/8348" target="_blank" rel="noreferrer">#8348</a></p><p>Updates all of the per key tap-hold functions to pass the <code>keyrecord_t</code> structure, and include documentation changes.</p><p>Any remaining versions or code outside of the main repo will need to be converted:</p><table><thead><tr><th>Old function</th><th>New Function</th></tr></thead><tbody><tr><td><code>uint16_t get_tapping_term(uint16_t keycode)</code></td><td><code>uint16_t get_tapping_term(uint16_t keycode, keyrecord_t *record)</code></td></tr><tr><td><code>bool get_ignore_mod_tap_interrupt(uint16_t keycode)</code></td><td><code>bool get_ignore_mod_tap_interrupt(uint16_t keycode, keyrecord_t *record)</code></td></tr></tbody></table><h3 id="python-required-in-the-build-process" tabindex="-1">Python Required In The Build Process <a class="header-anchor" href="#python-required-in-the-build-process" aria-label="Permalink to &quot;Python Required In The Build Process&quot;">​</a></h3><p><a href="https://github.com/qmk/qmk_firmware/pull/9000" target="_blank" rel="noreferrer">#9000</a></p><p>This is the last release of QMK that will work without having Python 3.6 (or later) installed. If your environment is not fully setup you will get a warning instructing you to set it up.</p><p>After the next breaking change you will not be able to build if <code>bin/qmk hello</code> does not work.</p><h3 id="upgrade-from-tinyprintf-to-mpaland-printf" tabindex="-1">Upgrade from tinyprintf to mpaland/printf <a class="header-anchor" href="#upgrade-from-tinyprintf-to-mpaland-printf" aria-label="Permalink to &quot;Upgrade from tinyprintf to mpaland/printf&quot;">​</a></h3><p><a href="https://github.com/qmk/qmk_firmware/pull/8269" target="_blank" rel="noreferrer">#8269</a></p><ul><li>Provides debug functionality on ChibiOS/ARM that is more compliant than previous integrations.</li><li>Less maintenence, fewer QMK customisations, and allows QMK to sidestep previous compile and runtime issues.</li><li>A <code>make git-submodule</code> may be required after pulling the latest QMK Firmware code to update to the new dependency.</li></ul><h3 id="fixed-rgb-disable-after-timeout-to-be-seconds-based-small-internals-cleanup" tabindex="-1">Fixed RGB_DISABLE_AFTER_TIMEOUT to be seconds based &amp; small internals cleanup <a class="header-anchor" href="#fixed-rgb-disable-after-timeout-to-be-seconds-based-small-internals-cleanup" aria-label="Permalink to &quot;Fixed RGB_DISABLE_AFTER_TIMEOUT to be seconds based &amp; small internals cleanup&quot;">​</a></h3><p><a href="https://github.com/qmk/qmk_firmware/pull/6480" target="_blank" rel="noreferrer">#6480</a></p><ul><li>Changes <code>RGB_DISABLE_AFTER_TIMEOUT</code> to be based on milliseconds instead of ticks.</li><li>Includes a code cleanup, resulting in a savings of 100 bytes, depending on features used.</li><li>Fixed issues with timeouts / suspending at the wrong time not turning off all LEDs in some cases.</li></ul><p>The <code>RGB_DISABLE_AFTER_TIMEOUT</code> definition is now deprecated, and has been superseded by <code>RGB_DISABLE_TIMEOUT</code>. To use the new definition, rename <code>RGB_DISABLE_AFTER_TIMEOUT</code> to <code>RGB_DISABLE_TIMEOUT</code> in your <code>config.h</code> file, and multiply the value set by 1200.</p><p>Before: <code>#define RGB_DISABLE_AFTER_TIMEOUT 100</code><br> After: <code>#define RGB_DISABLE_TIMEOUT 120000</code></p><h3 id="switch-to-qmk-forks-for-everything" tabindex="-1">Switch to qmk forks for everything <a class="header-anchor" href="#switch-to-qmk-forks-for-everything" aria-label="Permalink to &quot;Switch to qmk forks for everything&quot;">​</a></h3><p><a href="https://github.com/qmk/qmk_firmware/pull/9019" target="_blank" rel="noreferrer">#9019</a></p><p>Fork all QMK submodules to protect against upstream repositories disappearing.</p><h3 id="code-cleanup-regarding-deprecated-macro-play-note-array-by-replacing-it-with-play-song" tabindex="-1">code cleanup regarding deprecated macro PLAY_NOTE_ARRAY by replacing it with PLAY_SONG <a class="header-anchor" href="#code-cleanup-regarding-deprecated-macro-play-note-array-by-replacing-it-with-play-song" aria-label="Permalink to &quot;code cleanup regarding deprecated macro PLAY_NOTE_ARRAY by replacing it with PLAY_SONG&quot;">​</a></h3><p><a href="https://github.com/qmk/qmk_firmware/pull/8484" target="_blank" rel="noreferrer">#8484</a></p><p>Removes the deprecated <code>PLAY_NOTE_ARRAY</code> macro. References to it are replaced with <code>PLAY_SONG</code>, which references the same function.</p><h3 id="fixing-wrong-configuration-of-audio-feature" tabindex="-1">fixing wrong configuration of AUDIO feature <a class="header-anchor" href="#fixing-wrong-configuration-of-audio-feature" aria-label="Permalink to &quot;fixing wrong configuration of AUDIO feature&quot;">​</a></h3><p><a href="https://github.com/qmk/qmk_firmware/pull/8903" target="_blank" rel="noreferrer">#8903</a> and <a href="https://github.com/qmk/qmk_firmware/pull/8974" target="_blank" rel="noreferrer">#8974</a></p><p><code>audio_avr.c</code> does not default to any pin; there has to be a #define XX_AUDIO in config.h at some level for Audio to actually work. Otherwise, the Audio code ends up cluttering the firmware, possibly breaking builds because the maximum allowed firmware size is exceeded.</p><p>These changes fix this by disabling Audio on keyboards that have the feature misconfigured, and therefore non-functional.</p><p>Also, add a compile-time error to alert the user to a missing pin-configuration (on AVR boards) when <code>AUDIO_ENABLE = yes</code> is set.</p><h2 id="keyboard-refactors" tabindex="-1">Keyboard Refactors <a class="header-anchor" href="#keyboard-refactors" aria-label="Permalink to &quot;Keyboard Refactors&quot;">​</a></h2><h3 id="migrating-lily58-to-use-split-common" tabindex="-1">Migrating Lily58 to use split_common <a class="header-anchor" href="#migrating-lily58-to-use-split-common" aria-label="Permalink to &quot;Migrating Lily58 to use split_common&quot;">​</a></h3><p><a href="https://github.com/qmk/qmk_firmware/pull/6260" target="_blank" rel="noreferrer">#6260</a></p><p>Modifies the default firmware for Lily58 to use the <code>split_common</code> library, instead of including and depending on its own set of libraries for the following functionality:</p><ul><li>SSD1306 display</li><li>i2c for OLED</li><li>Serial Communication</li></ul><p>This allows current lily58 firmware to advance with updates to the <code>split_common</code> library, which is shared with many other split keyboards.</p><h4 id="to-migrate-existing-lily58-firmware" tabindex="-1">To migrate existing Lily58 firmware: <a class="header-anchor" href="#to-migrate-existing-lily58-firmware" aria-label="Permalink to &quot;To migrate existing Lily58 firmware:&quot;">​</a></h4><p><a href="https://github.com/qmk/qmk_firmware/pull/6260/files#diff-445ac369c8717dcd6fc6fc3630836fc1" target="_blank" rel="noreferrer">Changes to <code>config.h</code></a>:</p><ul><li>Remove <code>#define SSD1306OLED</code> from config.h</li></ul><p><a href="https://github.com/qmk/qmk_firmware/pull/6260/files#diff-20943ea59856e9bdf3d99ecb2eee40b7" target="_blank" rel="noreferrer">Changes to <code>keymap.c</code></a>:</p><ul><li>Find/Replace each instance of <code>#ifdef SSD1306OLED</code> with <code>#ifdef OLED_DRIVER_ENABLE</code></li><li>The following changes are for compatibility with the OLED driver. If you don&#39;t use the OLED driver you may safely delete <a href="https://github.com/qmk/qmk_firmware/blob/e6b9980bd45c186f7360df68c24b6e05a80c10dc/keyboards/lily58/keymaps/default/keymap.c#L144-L190" target="_blank" rel="noreferrer">this section</a></li><li>Alternatively, if you did not change the OLED code from that in <code>default</code>, you may find it easier to simply copy the <a href="https://github.com/qmk/qmk_firmware/blob/4ac310668501ae6786c711ecc8f01f62ddaa1c0b/keyboards/lily58/keymaps/default/keymap.c#L138-L172" target="_blank" rel="noreferrer">relevant section</a>. Otherwise, the changes you need to make are as follows (sample change <a href="https://github.com/qmk/qmk_firmware/pull/6260/files#diff-20943ea59856e9bdf3d99ecb2eee40b7R138-R173" target="_blank" rel="noreferrer">here</a>)</li><li><a href="https://github.com/qmk/qmk_firmware/pull/6260/files#diff-20943ea59856e9bdf3d99ecb2eee40b7L138-L141" target="_blank" rel="noreferrer">Remove</a> the block</li></ul><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#ifdef</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SSD1306OLED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  iota_gfx_init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">has_usb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // turns on the display	</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#endif</span></span></code></pre></div><ul><li>Within the block bounded by <code>#ifdef OLED_DRIVER_ENABLE</code> and <code>#endif // OLED_DRIVER_ENABLE</code>, add the following block to ensure that your two OLEDs are rotated correctly across the left and right sides:</li></ul><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">oled_rotation_t</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> oled_init_user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">oled_rotation_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> rotation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">is_keyboard_master</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> OLED_ROTATION_180;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // flips the display 180 degrees if offhand</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rotation;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li>Remove the functions <code>matrix_scan_user</code>, <code>matrix_update</code> and <code>iota_gfx_task_user</code></li><li>Find/Replace <code>matrix_render_user(struct CharacterMatrix *matrix)</code> with <code>iota_gfx_task_user(void)</code></li><li>Find/Replace <code>is_master</code> with <code>is_keyboard_master()</code></li><li>For each instance of <code>matrix_write_ln(matrix, display_fn())</code>, rewrite it as <code>oled_write_ln(read_layer_state(), false);</code></li><li>For each instance of <code>matrix_write(matrix, read_logo());</code>, replace with <code>oled_write(read_logo(), false);</code></li></ul><h3 id="refactor-zinc-to-use-split-common" tabindex="-1">Refactor zinc to use split_common <a class="header-anchor" href="#refactor-zinc-to-use-split-common" aria-label="Permalink to &quot;Refactor zinc to use split_common&quot;">​</a></h3><p><a href="https://github.com/qmk/qmk_firmware/pull/7114" target="_blank" rel="noreferrer">#7114</a> and <a href="https://github.com/qmk/qmk_firmware/pull/9171" target="_blank" rel="noreferrer">#9171</a></p><ul><li>Refactor to use split_common and remove split codes under the zinc/revx/</li><li>Add - backlight RGB LED and/or underglow RGB LED option</li><li>Add - continuous RGB animations feature (between L and R halves)</li><li>Fix - keymap files to adapt to changes <ul><li>all authors of keymaps confirmed this PR</li></ul></li><li>Update - documents and rules.mk</li></ul><h3 id="refactor-of-tkc1800-to-use-common-oled-code" tabindex="-1">Refactor of TKC1800 to use common OLED code <a class="header-anchor" href="#refactor-of-tkc1800-to-use-common-oled-code" aria-label="Permalink to &quot;Refactor of TKC1800 to use common OLED code&quot;">​</a></h3><p><a href="https://github.com/qmk/qmk_firmware/pull/8472" target="_blank" rel="noreferrer">#8472</a></p><p>Modifies the default firmware for TKC1800 to use the in-built I2C and OLED drivers, instead of including and depending on its own set of libraries for the following functionality:</p><ul><li>SSD1306 display</li><li>i2c for OLED</li></ul><p>This allows current TKC1800 firmware to advance with updates to those drivers, which are shared with other keyboards.</p><h4 id="to-migrate-existing-tkc1800-firmware" tabindex="-1">To migrate existing TKC1800 firmware: <a class="header-anchor" href="#to-migrate-existing-tkc1800-firmware" aria-label="Permalink to &quot;To migrate existing TKC1800 firmware:&quot;">​</a></h4><p><a href="https://github.com/qmk/qmk_firmware/pull/8472/files#diff-d10b26e676b4a55cbb00d71955116526" target="_blank" rel="noreferrer">Changes to <code>config.h</code></a>:</p><ul><li>Remove <code>#define SSD1306OLED</code> from config.h</li></ul><p><a href="https://github.com/qmk/qmk_firmware/pull/8472/files#diff-3b35bd30abe89c8110717c6972cd2cc5" target="_blank" rel="noreferrer">Changes to <code>tkc1800.c</code></a>:</p><ul><li>Add the following to avoid debug errors on HID_listen if the screen is not present</li></ul><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> keyboard_pre_init_kb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  setPinInputHigh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(D0);</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  setPinInputHigh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(D1);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  keyboard_pre_init_user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><a href="https://github.com/qmk/qmk_firmware/pull/8472/files#diff-05a2a344ce27e4d045fe68520ccd4771" target="_blank" rel="noreferrer">Changes to <code>keymap.c</code></a>:</p><ul><li>Find/Replace each instance of <code>#ifdef SSD1306OLED</code> with <code>#ifdef OLED_DRIVER_ENABLE</code></li><li>The following changes are for compatibility with the OLED driver. If you don&#39;t use the OLED driver you may safely delete <a href="https://github.com/qmk/qmk_firmware/blob/e6b9980bd45c186f7360df68c24b6e05a80c10dc/keyboards/lily58/keymaps/default/keymap.c#L144-L190" target="_blank" rel="noreferrer">this section</a></li><li><a href="https://github.com/qmk/qmk_firmware/pull/6260/files#diff-20943ea59856e9bdf3d99ecb2eee40b7L91-L158" target="_blank" rel="noreferrer">Remove</a> the block</li></ul><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#ifdef</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SSD1306OLED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  iota_gfx_init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">has_usb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // turns on the display	</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#endif</span></span></code></pre></div><ul><li>Within the block bounded by <code>#ifdef OLED_DRIVER_ENABLE</code> and <code>#endif // OLED_DRIVER_ENABLE</code>, add the following block to ensure that your two OLEDs are rotated correctly across the left and right sides:</li></ul><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">oled_rotation_t</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> oled_init_user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">oled_rotation_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> rotation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">is_keyboard_master</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> OLED_ROTATION_180;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // flips the display 180 degrees if offhand</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rotation;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li>Remove the function <code>iota_gfx_task_user</code></li></ul><h3 id="split-hhkb-to-ansi-and-jp-layouts-and-add-via-support-for-each" tabindex="-1">Split HHKB to ANSI and JP layouts and Add VIA support for each <a class="header-anchor" href="#split-hhkb-to-ansi-and-jp-layouts-and-add-via-support-for-each" aria-label="Permalink to &quot;Split HHKB to ANSI and JP layouts and Add VIA support for each&quot;">​</a></h3><p><a href="https://github.com/qmk/qmk_firmware/pull/8582" target="_blank" rel="noreferrer">#8582</a></p><ul><li>Splits the HHKB codebase into two separate folders <code>keyboards/hhkb/ansi</code> and <code>keyboards/hhkb/jp</code>.</li><li>Adds VIA Configurator support for both versions.</li></ul><h4 id="migrating-existing-hhkb-keymaps" tabindex="-1">Migrating existing HHKB keymaps <a class="header-anchor" href="#migrating-existing-hhkb-keymaps" aria-label="Permalink to &quot;Migrating existing HHKB keymaps&quot;">​</a></h4><ul><li>Remove any checks for the <code>HHKB_JP</code> definition <ul><li>All checks for this definition have been removed, and each version uses the source that is appropriate to that version.</li></ul></li><li>Move the directory for your keymap into the appropriate <code>keymaps</code> directory <ul><li><code>keyboards/hhkb/ansi/keymaps/</code> for ANSI HHKBs</li><li><code>keyboards/hhkb/jp/keymaps/</code> for HHKB JPs</li></ul></li><li>Compile with the new keyboard names <ul><li>This PR changes the compilation instructions for the HHKB Alternate Controller. To compile firmware for this controller moving forward, use: <ul><li><code>make hhkb/ansi</code> for ANSI-layout HHKBs</li><li><code>make hhkb/jp</code> for HHKB JP keyboards</li></ul></li></ul></li></ul><h2 id="keyboard-moves" tabindex="-1">Keyboard Moves <a class="header-anchor" href="#keyboard-moves" aria-label="Permalink to &quot;Keyboard Moves&quot;">​</a></h2><ul><li><a href="https://github.com/qmk/qmk_firmware/pull/8412" title="Changing board names to prevent confusion" target="_blank" rel="noreferrer">#8412</a> by blindassassin111</li><li><a href="https://github.com/qmk/qmk_firmware/pull/8499" title="Move the Keyboardio Model01 to a keyboardio/ subdir" target="_blank" rel="noreferrer">#8499</a> by algernon</li><li><a href="https://github.com/qmk/qmk_firmware/pull/8830" title="Move spaceman keyboards" target="_blank" rel="noreferrer">#8830</a> by Spaceman (formerly known as Rionlion100)</li><li><a href="https://github.com/qmk/qmk_firmware/pull/8537" title="Organizing my keyboards (plaid, tartan, ergoinu)" target="_blank" rel="noreferrer">#8537</a> by hsgw</li></ul><p>Keyboards by Keyboardio, Spaceman, and hsgw move to vendor folders, while PCBs designed by blindassassin111 are renamed.</p><table><thead><tr><th style="text-align:left;">Old Name</th><th style="text-align:left;">New Name</th></tr></thead><tbody><tr><td style="text-align:left;">2_milk</td><td style="text-align:left;">spaceman/2_milk</td></tr><tr><td style="text-align:left;">at101_blackheart</td><td style="text-align:left;">at101_bh</td></tr><tr><td style="text-align:left;">ergoinu</td><td style="text-align:left;">dm9records/ergoinu</td></tr><tr><td style="text-align:left;">model01</td><td style="text-align:left;">keyboardio/model01</td></tr><tr><td style="text-align:left;">omnikey_blackheart</td><td style="text-align:left;">omnikey_bh</td></tr><tr><td style="text-align:left;">pancake</td><td style="text-align:left;">spaceman/pancake</td></tr><tr><td style="text-align:left;">plaid</td><td style="text-align:left;">dm9records/plaid</td></tr><tr><td style="text-align:left;">tartan</td><td style="text-align:left;">dm9records/tartan</td></tr><tr><td style="text-align:left;">z150_blackheart</td><td style="text-align:left;">z150_bh</td></tr></tbody></table><p>If you own one of these PCBs, please use the new names to compile your firmware moving forward.</p><h2 id="keycode-migration-prs" tabindex="-1">Keycode Migration PRs <a class="header-anchor" href="#keycode-migration-prs" aria-label="Permalink to &quot;Keycode Migration PRs&quot;">​</a></h2><p><a href="https://github.com/qmk/qmk_firmware/pull/8954" title="Migrate `ACTION_LAYER_TOGGLE` to `TG()`" target="_blank" rel="noreferrer">#8954</a>, <a href="https://github.com/qmk/qmk_firmware/pull/8957" title="Migrate `ACTION_MODS_ONESHOT` to `OSM()`" target="_blank" rel="noreferrer">#8957</a>, <a href="https://github.com/qmk/qmk_firmware/pull/8958" title="Migrate `ACTION_DEFAULT_LAYER_SET` to `DF()`" target="_blank" rel="noreferrer">#8958</a>, <a href="https://github.com/qmk/qmk_firmware/pull/8959" title="Migrate `ACTION_LAYER_MODS` to `LM()`" target="_blank" rel="noreferrer">#8959</a>, <a href="https://github.com/qmk/qmk_firmware/pull/8968" title="Migrate `ACTION_MODS_TAP_KEY` to `MT()`" target="_blank" rel="noreferrer">#8968</a>, <a href="https://github.com/qmk/qmk_firmware/pull/8977" title="Migrate miscellaneous `fn_actions` entries" target="_blank" rel="noreferrer">#8977</a>, and <a href="https://github.com/qmk/qmk_firmware/pull/8979" title="Migrate `ACTION_MODS_KEY` to chained mod keycodes" target="_blank" rel="noreferrer">#8979</a></p><p>Authored by fauxpark, these pull requests remove references to deprecated TMK macros that have been superseded by native QMK keycodes.</p><table><thead><tr><th style="text-align:left;">Old <code>fn_actions</code> action</th><th style="text-align:left;">New QMK keycode</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ACTION_DEFAULT_LAYER_SET(layer)</code></td><td style="text-align:left;"><code>DF(layer)</code></td></tr><tr><td style="text-align:left;"><code>ACTION_LAYER_MODS(layer, mod)</code></td><td style="text-align:left;"><code>LM(layer, mod)</code></td></tr><tr><td style="text-align:left;"><code>ACTION_LAYER_ONESHOT(mod)</code></td><td style="text-align:left;"><code>OSL(mod)</code></td></tr><tr><td style="text-align:left;"><code>ACTION_LAYER_TOGGLE(layer)</code></td><td style="text-align:left;"><code>TG(layer)</code></td></tr><tr><td style="text-align:left;"><code>ACTION_MODS_ONESHOT(mod)</code></td><td style="text-align:left;"><code>OSM(mod)</code></td></tr><tr><td style="text-align:left;"><code>ACTION_MODS_TAP_KEY(mod, kc)</code></td><td style="text-align:left;"><code>MT(mod, kc)</code></td></tr><tr><td style="text-align:left;"><code>ACTION_MODS_KEY(mod, kc)</code><br>e.g. <code>ACTION_MODS_KEY(MOD_LCTL, KC_0)</code></td><td style="text-align:left;"><code>MOD(kc)</code><br>e.g. <code>LCTL(KC_0)</code></td></tr></tbody></table>', 84);
const _hoisted_85 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", null, _hoisted_85);
}
const _20200530 = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  __pageData,
  _20200530 as default
};
