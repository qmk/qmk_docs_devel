import { _ as _export_sfc, c as createElementBlock, o as openBlock, a8 as createStaticVNode } from "./chunks/framework.Cauyuiy8.js";
const __pageData = JSON.parse('{"title":"Magic Keycodes","description":"","frontmatter":{},"headers":[],"relativePath":"keycodes_magic.md","filePath":"keycodes_magic.md","lastUpdated":1751656200000}');
const _sfc_main = { name: "keycodes_magic.md" };
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="magic-keycodes" tabindex="-1">Magic Keycodes <a class="header-anchor" href="#magic-keycodes" aria-label="Permalink to &quot;Magic Keycodes {#magic-keycodes}&quot;">â€‹</a></h1><p><strong>Magic Keycodes</strong> are prefixed with <code>MAGIC_</code>, and allow you to access the functionality of the deprecated Bootmagic feature <em>after</em> your keyboard has initialized. To use the keycodes, assign them to your keymap as you would any other keycode.</p><table><thead><tr><th>Key</th><th>Aliases</th><th>Description</th></tr></thead><tbody><tr><td><code>QK_MAGIC_SWAP_CONTROL_CAPS_LOCK</code></td><td><code>CL_SWAP</code></td><td>Swap Caps Lock and Left Control</td></tr><tr><td><code>QK_MAGIC_UNSWAP_CONTROL_CAPS_LOCK</code></td><td><code>CL_NORM</code></td><td>Unswap Caps Lock and Left Control</td></tr><tr><td><code>QK_MAGIC_TOGGLE_CONTROL_CAPS_LOCK</code></td><td><code>CL_TOGG</code></td><td>Toggle Caps Lock and Left Control swap</td></tr><tr><td><code>QK_MAGIC_CAPS_LOCK_AS_CONTROL_ON</code></td><td><code>CL_CTRL</code></td><td>Treat Caps Lock as Control</td></tr><tr><td><code>QK_MAGIC_CAPS_LOCK_AS_CONTROL_OFF</code></td><td><code>CL_CAPS</code></td><td>Stop treating Caps Lock as Control</td></tr><tr><td><code>QK_MAGIC_SWAP_ESCAPE_CAPS_LOCK</code></td><td><code>EC_SWAP</code></td><td>Swap Caps Lock and Escape</td></tr><tr><td><code>QK_MAGIC_UNSWAP_ESCAPE_CAPS_LOCK</code></td><td><code>EC_NORM</code></td><td>Unswap Caps Lock and Escape</td></tr><tr><td><code>QK_MAGIC_TOGGLE_ESCAPE_CAPS_LOCK</code></td><td><code>EC_TOGG</code></td><td>Toggle Caps Lock and Escape swap</td></tr><tr><td><code>QK_MAGIC_SWAP_LCTL_LGUI</code></td><td><code>CG_LSWP</code></td><td>Swap Left Control and GUI</td></tr><tr><td><code>QK_MAGIC_UNSWAP_LCTL_LGUI</code></td><td><code>CG_LNRM</code></td><td>Unswap Left Control and GUI</td></tr><tr><td><code>QK_MAGIC_SWAP_RCTL_RGUI</code></td><td><code>CG_RSWP</code></td><td>Swap Right Control and GUI</td></tr><tr><td><code>QK_MAGIC_UNSWAP_RCTL_RGUI</code></td><td><code>CG_RNRM</code></td><td>Unswap Right Control and GUI</td></tr><tr><td><code>QK_MAGIC_SWAP_CTL_GUI</code></td><td><code>CG_SWAP</code></td><td>Swap Control and GUI on both sides</td></tr><tr><td><code>QK_MAGIC_UNSWAP_CTL_GUI</code></td><td><code>CG_NORM</code></td><td>Unswap Control and GUI on both sides</td></tr><tr><td><code>QK_MAGIC_TOGGLE_CTL_GUI</code></td><td><code>CG_TOGG</code></td><td>Toggle Control and GUI swap on both sides</td></tr><tr><td><code>QK_MAGIC_SWAP_LALT_LGUI</code></td><td><code>AG_LSWP</code></td><td>Swap Left Alt and GUI</td></tr><tr><td><code>QK_MAGIC_UNSWAP_LALT_LGUI</code></td><td><code>AG_LNRM</code></td><td>Unswap Left Alt and GUI</td></tr><tr><td><code>QK_MAGIC_SWAP_RALT_RGUI</code></td><td><code>AG_RSWP</code></td><td>Swap Right Alt and GUI</td></tr><tr><td><code>QK_MAGIC_UNSWAP_RALT_RGUI</code></td><td><code>AG_RNRM</code></td><td>Unswap Right Alt and GUI</td></tr><tr><td><code>QK_MAGIC_SWAP_ALT_GUI</code></td><td><code>AG_SWAP</code></td><td>Swap Alt and GUI on both sides</td></tr><tr><td><code>QK_MAGIC_UNSWAP_ALT_GUI</code></td><td><code>AG_NORM</code></td><td>Unswap Alt and GUI on both sides</td></tr><tr><td><code>QK_MAGIC_TOGGLE_ALT_GUI</code></td><td><code>AG_TOGG</code></td><td>Toggle Alt and GUI swap on both sides</td></tr><tr><td><code>QK_MAGIC_GUI_OFF</code></td><td><code>GU_OFF</code></td><td>Disable the GUI keys</td></tr><tr><td><code>QK_MAGIC_GUI_ON</code></td><td><code>GU_ON</code></td><td>Enable the GUI keys</td></tr><tr><td><code>QK_MAGIC_TOGGLE_GUI</code></td><td><code>GU_TOGG</code></td><td>Toggles the status of the GUI keys</td></tr><tr><td><code>QK_MAGIC_SWAP_GRAVE_ESC</code></td><td><code>GE_SWAP</code></td><td>Swap <code>`</code> and Escape</td></tr><tr><td><code>QK_MAGIC_UNSWAP_GRAVE_ESC</code></td><td><code>GE_NORM</code></td><td>Unswap <code>`</code> and Escape</td></tr><tr><td><code>QK_MAGIC_SWAP_BACKSLASH_BACKSPACE</code></td><td><code>BS_SWAP</code></td><td>Swap <code>\\</code> and Backspace</td></tr><tr><td><code>QK_MAGIC_UNSWAP_BACKSLASH_BACKSPACE</code></td><td><code>BS_NORM</code></td><td>Unswap <code>\\</code> and Backspace</td></tr><tr><td><code>QK_MAGIC_TOGGLE_BACKSLASH_BACKSPACE</code></td><td><code>BS_TOGG</code></td><td>Toggle <code>\\</code> and Backspace swap state</td></tr><tr><td><code>QK_MAGIC_NKRO_ON</code></td><td><code>NK_ON</code></td><td>Enable N-key rollover</td></tr><tr><td><code>QK_MAGIC_NKRO_OFF</code></td><td><code>NK_OFF</code></td><td>Disable N-key rollover</td></tr><tr><td><code>QK_MAGIC_TOGGLE_NKRO</code></td><td><code>NK_TOGG</code></td><td>Toggle N-key rollover</td></tr><tr><td><code>QK_MAGIC_EE_HANDS_LEFT</code></td><td><code>EH_LEFT</code></td><td>Set the master half of a split keyboard as the left hand (for <code>EE_HANDS</code>)</td></tr><tr><td><code>QK_MAGIC_EE_HANDS_RIGHT</code></td><td><code>EH_RGHT</code></td><td>Set the master half of a split keyboard as the right hand (for <code>EE_HANDS</code>)</td></tr></tbody></table>', 3);
const _hoisted_4 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", null, _hoisted_4);
}
const keycodes_magic = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  __pageData,
  keycodes_magic as default
};
