import { _ as _export_sfc, c as createElementBlock, o as openBlock, a8 as createStaticVNode } from "./chunks/framework.Cauyuiy8.js";
const __pageData = JSON.parse('{"title":"Command","description":"","frontmatter":{},"headers":[],"relativePath":"features/command.md","filePath":"features/command.md","lastUpdated":1751656200000}');
const _sfc_main = { name: "features/command.md" };
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="command" tabindex="-1">Command <a class="header-anchor" href="#command" aria-label="Permalink to &quot;Command&quot;">​</a></h1><p>Command, formerly known as Magic, is a way to change your keyboard&#39;s behavior without having to flash or unplug it to use <a href="./bootmagic">Bootmagic</a>. There is a lot of overlap between this functionality and the <a href="./../keycodes_magic">Magic Keycodes</a>. Wherever possible we encourage you to use that feature instead of Command.</p><p>On some keyboards Command is disabled by default. If this is the case, it must be explicitly enabled in your <code>rules.mk</code>:</p><div class="language-make vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">make</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">COMMAND_ENABLE = yes</span></span></code></pre></div><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><p>To use Command, hold down the key combination defined by the <code>IS_COMMAND()</code> macro. By default this is Left Shift+Right Shift. Then, press the key corresponding to the command you want. For example, to output the current QMK version to the QMK Toolbox console, press Left Shift+Right Shift+<code>V</code>.</p><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h2><p>If you would like to change the key assignments for Command, <code>#define</code> these in your <code>config.h</code> at either the keyboard or keymap level. All keycode assignments here must omit the <code>KC_</code> prefix.</p><table><thead><tr><th>Define</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>IS_COMMAND()</code></td><td><code>(get_mods() == MOD_MASK_SHIFT)</code></td><td>The key combination to activate Command</td></tr><tr><td><code>MAGIC_KEY_SWITCH_LAYER_WITH_FKEYS</code></td><td><code>true</code></td><td>Set default layer with the Function row</td></tr><tr><td><code>MAGIC_KEY_SWITCH_LAYER_WITH_NKEYS</code></td><td><code>true</code></td><td>Set default layer with the number keys</td></tr><tr><td><code>MAGIC_KEY_SWITCH_LAYER_WITH_CUSTOM</code></td><td><code>false</code></td><td>Set default layer with <code>MAGIC_KEY_LAYER0..9</code></td></tr><tr><td><code>MAGIC_KEY_DEBUG</code></td><td><code>D</code></td><td>Toggle debugging over serial</td></tr><tr><td><code>MAGIC_KEY_DEBUG_MATRIX</code></td><td><code>X</code></td><td>Toggle key matrix debugging</td></tr><tr><td><code>MAGIC_KEY_DEBUG_KBD</code></td><td><code>K</code></td><td>Toggle keyboard debugging</td></tr><tr><td><code>MAGIC_KEY_DEBUG_MOUSE</code></td><td><code>M</code></td><td>Toggle mouse debugging</td></tr><tr><td><code>MAGIC_KEY_CONSOLE</code></td><td><code>C</code></td><td>Enable the Command console</td></tr><tr><td><code>MAGIC_KEY_VERSION</code></td><td><code>V</code></td><td>Print the running QMK version to the console</td></tr><tr><td><code>MAGIC_KEY_STATUS</code></td><td><code>S</code></td><td>Print the current keyboard status to the console</td></tr><tr><td><code>MAGIC_KEY_HELP</code></td><td><code>H</code></td><td>Print Command help to the console</td></tr><tr><td><code>MAGIC_KEY_HELP_ALT</code></td><td><code>SLASH</code></td><td>Print Command help to the console (alternate)</td></tr><tr><td><code>MAGIC_KEY_LAYER0</code></td><td><code>0</code></td><td>Make layer 0 the default layer</td></tr><tr><td><code>MAGIC_KEY_LAYER0_ALT</code></td><td><code>GRAVE</code></td><td>Make layer 0 the default layer (alternate)</td></tr><tr><td><code>MAGIC_KEY_LAYER1</code></td><td><code>1</code></td><td>Make layer 1 the default layer</td></tr><tr><td><code>MAGIC_KEY_LAYER2</code></td><td><code>2</code></td><td>Make layer 2 the default layer</td></tr><tr><td><code>MAGIC_KEY_LAYER3</code></td><td><code>3</code></td><td>Make layer 3 the default layer</td></tr><tr><td><code>MAGIC_KEY_LAYER4</code></td><td><code>4</code></td><td>Make layer 4 the default layer</td></tr><tr><td><code>MAGIC_KEY_LAYER5</code></td><td><code>5</code></td><td>Make layer 5 the default layer</td></tr><tr><td><code>MAGIC_KEY_LAYER6</code></td><td><code>6</code></td><td>Make layer 6 the default layer</td></tr><tr><td><code>MAGIC_KEY_LAYER7</code></td><td><code>7</code></td><td>Make layer 7 the default layer</td></tr><tr><td><code>MAGIC_KEY_LAYER8</code></td><td><code>8</code></td><td>Make layer 8 the default layer</td></tr><tr><td><code>MAGIC_KEY_LAYER9</code></td><td><code>9</code></td><td>Make layer 9 the default layer</td></tr><tr><td><code>MAGIC_KEY_BOOTLOADER</code></td><td><code>B</code></td><td>Jump to bootloader</td></tr><tr><td><code>MAGIC_KEY_BOOTLOADER_ALT</code></td><td><code>ESC</code></td><td>Jump to bootloader (alternate)</td></tr><tr><td><code>MAGIC_KEY_LOCK</code></td><td><code>CAPS</code></td><td>Lock the keyboard so nothing can be typed</td></tr><tr><td><code>MAGIC_KEY_EEPROM</code></td><td><code>E</code></td><td>Print stored EEPROM config to the console</td></tr><tr><td><code>MAGIC_KEY_EEPROM_CLEAR</code></td><td><code>BSPACE</code></td><td>Clear the EEPROM</td></tr><tr><td><code>MAGIC_KEY_NKRO</code></td><td><code>N</code></td><td>Toggle N-Key Rollover (NKRO)</td></tr><tr><td><code>MAGIC_KEY_SLEEP_LED</code></td><td><code>Z</code></td><td>Toggle LED when computer is sleeping</td></tr></tbody></table>', 9);
const _hoisted_10 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", null, _hoisted_10);
}
const command = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  __pageData,
  command as default
};
